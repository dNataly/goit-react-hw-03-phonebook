{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/FormButton/FormButton.module.css","Components/Filter/Filter.module.css","Components/FormButton/FormButton.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","FormButton","type","disabled","onClick","label","className","s","formBtn","ContactList","contacts","removeContact","list","map","id","name","number","listItem","listName","listNumber","ContactForm","onSubmit","useState","setName","setNumber","handleInputChange","e","target","value","preventDefault","form","formItem","formInput","onChange","pattern","title","required","Filter","filterInput","LOCAL_CONTACTS","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","phoneNumber","toLowerCase","find","contact","isInContact","alert","newContact","uuidv4","prev","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15cb10c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ContactForm_formInput__2VXRu\",\"formItem\":\"ContactForm_formItem__31vzM\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cE9S\",\"listName\":\"ContactList_listName__33qvU\",\"listItem\":\"ContactList_listItem__2qeAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBtn\":\"FormButton_formBtn__1jcFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\"};","import React from \"react\";\nimport s from \"./FormButton.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst FormButton = ({ type = \"button\", disabled = false, onClick, label }) => {\n  return (\n    <button\n      className={s.formBtn}\n      type={type}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default FormButton;\n\nFormButton.propTypes = {\n  type: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func,\n  label: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\nimport FormButton from \"./../FormButton/FormButton\";\n\nconst ContactList = ({ contacts, removeContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.listItem}>\n          <span className={s.listName}>{name}</span>\n          <span className={s.listNumber}>{number}</span>\n          <FormButton label=\"Remove\" onClick={() => removeContact(id)} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  removeContact: PropTypes.func,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\nimport FormButton from \"../FormButton/FormButton\";\n\nexport default function ContactForm ({onSubmit}) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n\n        switch (name) {\n            case 'name': setName(value);\n            break;\n\n            case 'number': setNumber(value);\n            break;\n\n            default: return;\n        }\n    };\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n       onSubmit(name, number);\n       setName('');\n       setNumber('');\n    };\n\n        return (\n            <div>\n                <form onSubmit={handleSubmit} className={s.form}>\n                    <label className={s.formItem}>\n                        Name\n                        <input\n                            className={s.formInput}\n                            type=\"text\"\n                            name=\"name\"\n                            value={name}\n                            onChange={handleInputChange}\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                            required\n                        />\n                    </label>\n                    <label className={s.formItem}>\n                        Number\n                        <input\n                            className={s.formInput}\n                            name=\"number\"\n                            type=\"tel\"\n                            value={number}\n                            onChange={handleInputChange}\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                            required\n                        />\n                    </label>\n                    <FormButton type=\"submit\" className={s.formBtn} label=\"Add contact\" />\n                </form>\n            </div>\n        );\n    }\n\n\nContactForm.propTypes = {\n    onSubmit: PropTypes.func,\n};","import React from \"react\";\nimport s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Filter = ({ onChange }) => {\n  return (\n    <div>\n      <label>\n        Find contacts by name:\n        <input\n          className={s.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Filter from \"./Components/Filter/Filter\";\n\nconst LOCAL_CONTACTS = 'contacts';\n\nexport default function App () {\n const [contacts, setContacts] = useState([]);\n const [filter, setFilter] = useState('');\n\n useEffect (() => {\n     const contacts = JSON.parse(localStorage.getItem(LOCAL_CONTACTS));\n     if(contacts) {\n         setContacts(contacts);\n     }\n }, []);\n\n\n useEffect(() => {\n     localStorage.setItem(LOCAL_CONTACTS, JSON.stringify(contacts));\n }, [contacts]);\n\n\n  const isInContact = (name) => {\n      name = name.toLowerCase();\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n const addContact = (name, phoneNumber) => {\n    if (isInContact(name)) {\n        alert(`${name} is already in contacts)`);\n    return;\n    }\n        const newContact = {id: uuidv4(), name, phoneNumber};\n        setContacts(prev => [newContact, ...prev]);\n  };\n\n const handleChange = e => {\n     setFilter(e.target.value);\n }\n\n  const getFilteredContact = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const removeContact = (contactId) => {\n   setContacts(prev=>prev.filter(contact=> contact.id !== contactId))\n  };\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n\n        <h2>Contacts</h2>\n        <Filter onChange={handleChange} />\n        <ContactList\n          contacts={getFilteredContact()}\n          removeContact={removeContact}\n        />\n      </div>\n    );\n  }\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}